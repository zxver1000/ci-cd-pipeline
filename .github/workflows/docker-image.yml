name: Docker Image CI

on:
  push:
    branches: [ "main" ]
env:
  AWS_REGION: ap-northeast-2   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: koko # set this to your Amazon ECR repository name


jobs:

  build:

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get short SHA
      id: get-short-sha
      run: |
        tag=$(echo ${{github.sha}} | cut -c 1-7)
        echo "::set-output name=tag::$tag"
      
    - name: Build,  and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{steps.get-short-sha.outputs.tag}}
        function_name: hihi
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./deploy/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        aws lambda update-function-code --function-name $function_name --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      
